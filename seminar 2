#1
import numpy as np
def f(x):
    return 2*x**3 - 3*x**2 - 1
def gauss_quadr(f):
    x1 = (1/2)*(1-1/np.sqrt(3))
    x2 = (1/2)*(1+1/np.sqrt(3))
    w1 = w2 = 1/2
    return (w1*f(x1) + w2*f(x2))
print(gauss_quadr(f))

#2
from scipy.special import roots_legendre
roots, weights = roots_legendre(11)
print(roots)
import numpy as np 
def func (x):
    return x**8
print(np.sum(func(roots) * weights))
